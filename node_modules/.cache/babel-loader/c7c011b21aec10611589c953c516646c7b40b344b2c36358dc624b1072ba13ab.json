{"ast":null,"code":"var _jsxFileName = \"/Users/kc4ca/kastamonu-yemekhane/src/components/MenuList.js\";\nimport React from 'react';\nimport { format } from 'date-fns';\nimport { tr } from 'date-fns/locale';\nimport MenuSection from './MenuSection';\nimport '../styles/MenuList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MenuList({\n  menuData\n}) {\n  // Bugünün tarihi\n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(today.getDate() + 1);\n  const todayFormatted = format(today, 'd MMMM yyyy', {\n    locale: tr\n  });\n  const tomorrowFormatted = format(tomorrow, 'd MMMM yyyy', {\n    locale: tr\n  });\n\n  // Bugünün ve yarının menüsünü bul\n  const todayMenu = menuData.find(menu => {\n    const menuDate = new Date(menu.date);\n    return menuDate.getDate() === today.getDate() && menuDate.getMonth() === today.getMonth() && menuDate.getFullYear() === today.getFullYear();\n  });\n  const tomorrowMenu = menuData.find(menu => {\n    const menuDate = new Date(menu.date);\n    return menuDate.getDate() === tomorrow.getDate() && menuDate.getMonth() === tomorrow.getMonth() && menuDate.getFullYear() === tomorrow.getFullYear();\n  });\n\n  // Diğer günlerin menülerini bul (bugün ve yarın hariç)\n  const otherDaysMenus = menuData.filter(menu => {\n    const menuDate = new Date(menu.date);\n    return !(menuDate.getDate() === today.getDate() && menuDate.getMonth() === today.getMonth() && menuDate.getFullYear() === today.getFullYear() || menuDate.getDate() === tomorrow.getDate() && menuDate.getMonth() === tomorrow.getMonth() && menuDate.getFullYear() === tomorrow.getFullYear());\n  }).sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-list\",\n    children: [todayMenu ? /*#__PURE__*/_jsxDEV(MenuSection, {\n      title: `bugünün menüsü - ${todayFormatted}`,\n      menu: todayMenu,\n      isToday: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-menu today\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"bug\\xFCn\\xFCn men\\xFCs\\xFC - \", todayFormatted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bug\\xFCn i\\xE7in men\\xFC bilgisi bulunamad\\u0131.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), tomorrowMenu ? /*#__PURE__*/_jsxDEV(MenuSection, {\n      title: `yarının menüsü - ${tomorrowFormatted}`,\n      menu: tomorrowMenu,\n      isTomorrow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-menu tomorrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"yar\\u0131n\\u0131n men\\xFCs\\xFC - \", tomorrowFormatted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Yar\\u0131n i\\xE7in men\\xFC bilgisi bulunamad\\u0131.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), otherDaysMenus.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other-days\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"other-days-title\",\n        children: \"di\\u011Fer g\\xFCnler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), otherDaysMenus.map((menu, index) => /*#__PURE__*/_jsxDEV(MenuSection, {\n        title: format(new Date(menu.date), 'd MMMM yyyy', {\n          locale: tr\n        }),\n        menu: menu,\n        isOtherDay: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["React","format","tr","MenuSection","jsxDEV","_jsxDEV","MenuList","menuData","today","Date","tomorrow","setDate","getDate","todayFormatted","locale","tomorrowFormatted","todayMenu","find","menu","menuDate","date","getMonth","getFullYear","tomorrowMenu","otherDaysMenus","filter","sort","a","b","className","children","title","isToday","fileName","_jsxFileName","lineNumber","columnNumber","isTomorrow","length","map","index","isOtherDay","_c","$RefreshReg$"],"sources":["/Users/kc4ca/kastamonu-yemekhane/src/components/MenuList.js"],"sourcesContent":["import React from 'react';\nimport { format } from 'date-fns';\nimport { tr } from 'date-fns/locale';\nimport MenuSection from './MenuSection';\nimport '../styles/MenuList.css';\n\nfunction MenuList({ menuData }) {\n  // Bugünün tarihi\n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(today.getDate() + 1);\n  \n  const todayFormatted = format(today, 'd MMMM yyyy', { locale: tr });\n  const tomorrowFormatted = format(tomorrow, 'd MMMM yyyy', { locale: tr });\n  \n  // Bugünün ve yarının menüsünü bul\n  const todayMenu = menuData.find(menu => {\n    const menuDate = new Date(menu.date);\n    return menuDate.getDate() === today.getDate() && \n           menuDate.getMonth() === today.getMonth() && \n           menuDate.getFullYear() === today.getFullYear();\n  });\n  \n  const tomorrowMenu = menuData.find(menu => {\n    const menuDate = new Date(menu.date);\n    return menuDate.getDate() === tomorrow.getDate() && \n           menuDate.getMonth() === tomorrow.getMonth() && \n           menuDate.getFullYear() === tomorrow.getFullYear();\n  });\n  \n  // Diğer günlerin menülerini bul (bugün ve yarın hariç)\n  const otherDaysMenus = menuData.filter(menu => {\n    const menuDate = new Date(menu.date);\n    return !(\n      (menuDate.getDate() === today.getDate() && \n       menuDate.getMonth() === today.getMonth() && \n       menuDate.getFullYear() === today.getFullYear()) ||\n      (menuDate.getDate() === tomorrow.getDate() && \n       menuDate.getMonth() === tomorrow.getMonth() && \n       menuDate.getFullYear() === tomorrow.getFullYear())\n    );\n  }).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  return (\n    <div className=\"menu-list\">\n      {/* Bugünün menüsü */}\n      {todayMenu ? (\n        <MenuSection \n          title={`bugünün menüsü - ${todayFormatted}`}\n          menu={todayMenu}\n          isToday={true}\n        />\n      ) : (\n        <div className=\"no-menu today\">\n          <h2>bugünün menüsü - {todayFormatted}</h2>\n          <p>Bugün için menü bilgisi bulunamadı.</p>\n        </div>\n      )}\n      \n      {/* Yarının menüsü */}\n      {tomorrowMenu ? (\n        <MenuSection \n          title={`yarının menüsü - ${tomorrowFormatted}`}\n          menu={tomorrowMenu}\n          isTomorrow={true}\n        />\n      ) : (\n        <div className=\"no-menu tomorrow\">\n          <h2>yarının menüsü - {tomorrowFormatted}</h2>\n          <p>Yarın için menü bilgisi bulunamadı.</p>\n        </div>\n      )}\n      \n      {/* Diğer günlerin menüleri */}\n      {otherDaysMenus.length > 0 && (\n        <div className=\"other-days\">\n          <h2 className=\"other-days-title\">diğer günler</h2>\n          {otherDaysMenus.map((menu, index) => (\n            <MenuSection \n              key={index}\n              title={format(new Date(menu.date), 'd MMMM yyyy', { locale: tr })}\n              menu={menu}\n              isOtherDay={true}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MenuList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}