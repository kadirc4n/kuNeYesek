{"ast":null,"code":"var _jsxFileName = \"/Users/kc4ca/kastamonu-yemekhane/src/components/MenuSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../styles/MenuSection.css';\n\n// Türkçe karakterler için özel toLowerCase fonksiyonu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst turkishToLowerCase = str => {\n  const turkish = {\n    'İ': 'i',\n    'I': 'ı',\n    'Ğ': 'ğ',\n    'Ü': 'ü',\n    'Ş': 'ş',\n    'Ö': 'ö',\n    'Ç': 'ç'\n  };\n  return str.replace(/[İIĞÜŞÖÇ]/g, letter => turkish[letter] || letter).toLowerCase();\n};\nconst CalorieBadge = ({\n  calories\n}) => {\n  const value = parseInt(calories);\n  let badgeClass = 'calorie-badge';\n  if (value > 300) {\n    badgeClass += ' high';\n  } else if (value >= 200) {\n    badgeClass += ' medium';\n  } else {\n    badgeClass += ' low';\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: badgeClass,\n    children: [value, \" kcal\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = CalorieBadge;\nfunction MenuSection({\n  title,\n  menu,\n  isToday,\n  isTomorrow,\n  isOtherDay\n}) {\n  _s();\n  const [dateText, ...titleParts] = title.split(' - ');\n  const sectionClass = isToday ? 'menu-section today' : isTomorrow ? 'menu-section tomorrow' : 'menu-section other-day';\n  const menuItemsRef = useRef([]);\n  useEffect(() => {\n    const observerCallback = entries => {\n      entries.forEach((entry, index) => {\n        if (entry.isIntersecting) {\n          // Sıralı animasyon için gecikme ekle\n          setTimeout(() => {\n            entry.target.classList.add('visible');\n          }, index * 100); // Her öğe için 100ms gecikme\n        }\n      });\n    };\n    const observer = new IntersectionObserver(observerCallback, {\n      threshold: 0.1,\n      rootMargin: '0px'\n    });\n    menuItemsRef.current.forEach(item => {\n      if (item) {\n        observer.observe(item);\n      }\n    });\n    return () => {\n      menuItemsRef.current.forEach(item => {\n        if (item) {\n          observer.unobserve(item);\n        }\n      });\n    };\n  }, []);\n  const extractCalories = item => {\n    const match = item.match(/(\\d+)\\s*KKAL/i);\n    return match ? match[1] : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: sectionClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: turkishToLowerCase(dateText)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), titleParts.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date-subtitle\",\n        children: turkishToLowerCase(titleParts.join(' - '))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-items\",\n      children: menu.items.map((item, index) => {\n        const calories = extractCalories(item);\n        const itemName = turkishToLowerCase(item.replace(/\\s*\\d+\\s*KKAL/i, ''));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-item fade-in\",\n          ref: el => menuItemsRef.current[index] = el,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"item-name\",\n            children: itemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), calories && /*#__PURE__*/_jsxDEV(CalorieBadge, {\n            calories: calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 28\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(MenuSection, \"KQBdNqvXqD+xSPt1wO1wQtMMsXw=\");\n_c2 = MenuSection;\nexport default MenuSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalorieBadge\");\n$RefreshReg$(_c2, \"MenuSection\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","turkishToLowerCase","str","turkish","replace","letter","toLowerCase","CalorieBadge","calories","value","parseInt","badgeClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuSection","title","menu","isToday","isTomorrow","isOtherDay","_s","dateText","titleParts","split","sectionClass","menuItemsRef","observerCallback","entries","forEach","entry","index","isIntersecting","setTimeout","target","classList","add","observer","IntersectionObserver","threshold","rootMargin","current","item","observe","unobserve","extractCalories","match","length","join","items","map","itemName","ref","el","_c2","$RefreshReg$"],"sources":["/Users/kc4ca/kastamonu-yemekhane/src/components/MenuSection.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport '../styles/MenuSection.css';\n\n// Türkçe karakterler için özel toLowerCase fonksiyonu\nconst turkishToLowerCase = (str) => {\n  const turkish = {\n    'İ': 'i',\n    'I': 'ı',\n    'Ğ': 'ğ',\n    'Ü': 'ü',\n    'Ş': 'ş',\n    'Ö': 'ö',\n    'Ç': 'ç'\n  };\n  \n  return str.replace(/[İIĞÜŞÖÇ]/g, letter => turkish[letter] || letter).toLowerCase();\n};\n\nconst CalorieBadge = ({ calories }) => {\n  const value = parseInt(calories);\n  let badgeClass = 'calorie-badge';\n  \n  if (value > 300) {\n    badgeClass += ' high';\n  } else if (value >= 200) {\n    badgeClass += ' medium';\n  } else {\n    badgeClass += ' low';\n  }\n  \n  return (\n    <span className={badgeClass}>\n      {value} kcal\n    </span>\n  );\n};\n\nfunction MenuSection({ title, menu, isToday, isTomorrow, isOtherDay }) {\n  const [dateText, ...titleParts] = title.split(' - ');\n  const sectionClass = isToday \n    ? 'menu-section today' \n    : isTomorrow \n      ? 'menu-section tomorrow' \n      : 'menu-section other-day';\n\n  const menuItemsRef = useRef([]);\n\n  useEffect(() => {\n    const observerCallback = (entries) => {\n      entries.forEach((entry, index) => {\n        if (entry.isIntersecting) {\n          // Sıralı animasyon için gecikme ekle\n          setTimeout(() => {\n            entry.target.classList.add('visible');\n          }, index * 100); // Her öğe için 100ms gecikme\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(observerCallback, {\n      threshold: 0.1,\n      rootMargin: '0px'\n    });\n\n    menuItemsRef.current.forEach(item => {\n      if (item) {\n        observer.observe(item);\n      }\n    });\n\n    return () => {\n      menuItemsRef.current.forEach(item => {\n        if (item) {\n          observer.unobserve(item);\n        }\n      });\n    };\n  }, []);\n\n  const extractCalories = (item) => {\n    const match = item.match(/(\\d+)\\s*KKAL/i);\n    return match ? match[1] : null;\n  };\n\n  return (\n    <section className={sectionClass}>\n      <div className=\"menu-title\">\n        <h2>{turkishToLowerCase(dateText)}</h2>\n        {titleParts.length > 0 && <p className=\"date-subtitle\">{turkishToLowerCase(titleParts.join(' - '))}</p>}\n      </div>\n      <div className=\"menu-items\">\n        {menu.items.map((item, index) => {\n          const calories = extractCalories(item);\n          const itemName = turkishToLowerCase(item.replace(/\\s*\\d+\\s*KKAL/i, ''));\n          \n          return (\n            <div \n              key={index} \n              className=\"menu-item fade-in\"\n              ref={el => menuItemsRef.current[index] = el}\n            >\n              <span className=\"item-name\">{itemName}</span>\n              {calories && <CalorieBadge calories={calories} />}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nexport default MenuSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}