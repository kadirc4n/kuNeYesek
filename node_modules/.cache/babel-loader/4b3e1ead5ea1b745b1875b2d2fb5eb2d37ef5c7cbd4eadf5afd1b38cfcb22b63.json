{"ast":null,"code":"var _jsxFileName = \"/Users/kc4ca/kastamonu-yemekhane/src/components/MenuSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../styles/MenuSection.css';\n\n// Türkçe karakterler için özel toLowerCase fonksiyonu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst turkishToLowerCase = str => {\n  const turkish = {\n    'İ': 'i',\n    'I': 'ı',\n    'Ğ': 'ğ',\n    'Ü': 'ü',\n    'Ş': 'ş',\n    'Ö': 'ö',\n    'Ç': 'ç'\n  };\n  return str.replace(/[İIĞÜŞÖÇ]/g, letter => turkish[letter] || letter).toLowerCase();\n};\nconst CalorieBadge = ({\n  calories,\n  isTotal\n}) => {\n  const value = parseInt(calories);\n  let badgeClass = isTotal ? 'total-calorie-badge' : 'calorie-badge';\n  const text = `${isTotal ? 'toplam ' : ''}${value} kcal`;\n  if (!isTotal) {\n    if (value > 300) {\n      badgeClass += ' high';\n    } else if (value >= 200) {\n      badgeClass += ' medium';\n    } else {\n      badgeClass += ' low';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: badgeClass,\n    \"data-text\": text,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = CalorieBadge;\nfunction MenuSection({\n  title,\n  menu,\n  isToday,\n  isTomorrow,\n  isOtherDay\n}) {\n  _s();\n  const [dateText, ...titleParts] = title.split(' - ');\n  const sectionClass = isToday ? 'menu-section today' : isTomorrow ? 'menu-section tomorrow' : 'menu-section other-day';\n  const menuItemsRef = useRef([]);\n  const sectionRef = useRef(null);\n  useEffect(() => {\n    // Menü öğeleri için observer\n    const itemObserverCallback = entries => {\n      entries.forEach((entry, index) => {\n        if (entry.isIntersecting) {\n          setTimeout(() => {\n            entry.target.classList.add('visible');\n          }, index * 50);\n        }\n      });\n    };\n    const itemObserver = new IntersectionObserver(itemObserverCallback, {\n      threshold: 0.1,\n      rootMargin: '0px'\n    });\n    menuItemsRef.current.forEach(item => {\n      if (item) {\n        itemObserver.observe(item);\n      }\n    });\n\n    // Kart için observer\n    const sectionObserverCallback = entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('section-visible');\n        }\n      });\n    };\n    const sectionObserver = new IntersectionObserver(sectionObserverCallback, {\n      threshold: 0.1,\n      rootMargin: '50px'\n    });\n    if (sectionRef.current) {\n      sectionObserver.observe(sectionRef.current);\n    }\n    return () => {\n      menuItemsRef.current.forEach(item => {\n        if (item) {\n          itemObserver.unobserve(item);\n        }\n      });\n      if (sectionRef.current) {\n        sectionObserver.unobserve(sectionRef.current);\n      }\n    };\n  }, []);\n  const extractCalories = item => {\n    const match = item.match(/(\\d+)\\s*KKAL/i);\n    return match ? match[1] : null;\n  };\n\n  // Toplam kaloriyi hesapla\n  const totalCalories = menu.items.reduce((total, item) => {\n    const calories = extractCalories(item);\n    return total + (calories ? parseInt(calories) : 0);\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `${sectionClass} section-fade-in`,\n    ref: sectionRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: turkishToLowerCase(dateText)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), titleParts.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date-subtitle\",\n        children: turkishToLowerCase(titleParts.join(' - '))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-items\",\n      children: menu.items.map((item, index) => {\n        const calories = extractCalories(item);\n        const itemName = turkishToLowerCase(item.replace(/\\s*\\d+\\s*KKAL/i, ''));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-item fade-in\",\n          ref: el => menuItemsRef.current[index] = el,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"item-name\",\n            children: itemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), calories && /*#__PURE__*/_jsxDEV(CalorieBadge, {\n            calories: calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 28\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-calories\",\n      children: /*#__PURE__*/_jsxDEV(CalorieBadge, {\n        calories: totalCalories,\n        isTotal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(MenuSection, \"JnDANMDlneNvUoVyZz05B9P0Wwg=\");\n_c2 = MenuSection;\nexport default MenuSection;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalorieBadge\");\n$RefreshReg$(_c2, \"MenuSection\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","turkishToLowerCase","str","turkish","replace","letter","toLowerCase","CalorieBadge","calories","isTotal","value","parseInt","badgeClass","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MenuSection","title","menu","isToday","isTomorrow","isOtherDay","_s","dateText","titleParts","split","sectionClass","menuItemsRef","sectionRef","itemObserverCallback","entries","forEach","entry","index","isIntersecting","setTimeout","target","classList","add","itemObserver","IntersectionObserver","threshold","rootMargin","current","item","observe","sectionObserverCallback","sectionObserver","unobserve","extractCalories","match","totalCalories","items","reduce","total","ref","length","join","map","itemName","el","_c2","$RefreshReg$"],"sources":["/Users/kc4ca/kastamonu-yemekhane/src/components/MenuSection.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport '../styles/MenuSection.css';\n\n// Türkçe karakterler için özel toLowerCase fonksiyonu\nconst turkishToLowerCase = (str) => {\n  const turkish = {\n    'İ': 'i',\n    'I': 'ı',\n    'Ğ': 'ğ',\n    'Ü': 'ü',\n    'Ş': 'ş',\n    'Ö': 'ö',\n    'Ç': 'ç'\n  };\n  \n  return str.replace(/[İIĞÜŞÖÇ]/g, letter => turkish[letter] || letter).toLowerCase();\n};\n\nconst CalorieBadge = ({ calories, isTotal }) => {\n  const value = parseInt(calories);\n  let badgeClass = isTotal ? 'total-calorie-badge' : 'calorie-badge';\n  const text = `${isTotal ? 'toplam ' : ''}${value} kcal`;\n  \n  if (!isTotal) {\n    if (value > 300) {\n      badgeClass += ' high';\n    } else if (value >= 200) {\n      badgeClass += ' medium';\n    } else {\n      badgeClass += ' low';\n    }\n  }\n  \n  return (\n    <span className={badgeClass} data-text={text}>\n      {text}\n    </span>\n  );\n};\n\nfunction MenuSection({ title, menu, isToday, isTomorrow, isOtherDay }) {\n  const [dateText, ...titleParts] = title.split(' - ');\n  const sectionClass = isToday \n    ? 'menu-section today' \n    : isTomorrow \n      ? 'menu-section tomorrow' \n      : 'menu-section other-day';\n\n  const menuItemsRef = useRef([]);\n  const sectionRef = useRef(null);\n\n  useEffect(() => {\n    // Menü öğeleri için observer\n    const itemObserverCallback = (entries) => {\n      entries.forEach((entry, index) => {\n        if (entry.isIntersecting) {\n          setTimeout(() => {\n            entry.target.classList.add('visible');\n          }, index * 50);\n        }\n      });\n    };\n\n    const itemObserver = new IntersectionObserver(itemObserverCallback, {\n      threshold: 0.1,\n      rootMargin: '0px'\n    });\n\n    menuItemsRef.current.forEach(item => {\n      if (item) {\n        itemObserver.observe(item);\n      }\n    });\n\n    // Kart için observer\n    const sectionObserverCallback = (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('section-visible');\n        }\n      });\n    };\n\n    const sectionObserver = new IntersectionObserver(sectionObserverCallback, {\n      threshold: 0.1,\n      rootMargin: '50px'\n    });\n\n    if (sectionRef.current) {\n      sectionObserver.observe(sectionRef.current);\n    }\n\n    return () => {\n      menuItemsRef.current.forEach(item => {\n        if (item) {\n          itemObserver.unobserve(item);\n        }\n      });\n      if (sectionRef.current) {\n        sectionObserver.unobserve(sectionRef.current);\n      }\n    };\n  }, []);\n\n  const extractCalories = (item) => {\n    const match = item.match(/(\\d+)\\s*KKAL/i);\n    return match ? match[1] : null;\n  };\n\n  // Toplam kaloriyi hesapla\n  const totalCalories = menu.items.reduce((total, item) => {\n    const calories = extractCalories(item);\n    return total + (calories ? parseInt(calories) : 0);\n  }, 0);\n\n  return (\n    <section className={`${sectionClass} section-fade-in`} ref={sectionRef}>\n      <div className=\"menu-title\">\n        <h2>{turkishToLowerCase(dateText)}</h2>\n        {titleParts.length > 0 && <p className=\"date-subtitle\">{turkishToLowerCase(titleParts.join(' - '))}</p>}\n      </div>\n      <div className=\"menu-items\">\n        {menu.items.map((item, index) => {\n          const calories = extractCalories(item);\n          const itemName = turkishToLowerCase(item.replace(/\\s*\\d+\\s*KKAL/i, ''));\n          \n          return (\n            <div \n              key={index} \n              className=\"menu-item fade-in\"\n              ref={el => menuItemsRef.current[index] = el}\n            >\n              <span className=\"item-name\">{itemName}</span>\n              {calories && <CalorieBadge calories={calories} />}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"total-calories\">\n        <CalorieBadge calories={totalCalories} isTotal={true} />\n      </div>\n    </section>\n  );\n}\n\nexport default MenuSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}